<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.offcn.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.offcn.bean.Employee">
    <id column="eid" jdbcType="INTEGER" property="eid" />
    <result column="ename" jdbcType="VARCHAR" property="ename" />
    <result column="esex" jdbcType="INTEGER" property="esex" />
    <result column="age" jdbcType="VARCHAR" property="age" />
    <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="hire_date" jdbcType="DATE" property="hireDate" />
    <result column="jobnumber" jdbcType="VARCHAR" property="jobnumber" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="remark1" jdbcType="VARCHAR" property="remark1" />
    <result column="remark2" jdbcType="VARCHAR" property="remark2" />
    <result column="remark3" jdbcType="VARCHAR" property="remark3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    eid, ename, esex, age, phonenumber, hire_date, jobnumber, password, remark1, remark2, 
    remark3
  </sql>
  <select id="selectByExample" parameterType="com.offcn.bean.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where eid = #{eid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where eid = #{eid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.offcn.bean.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="eid" parameterType="com.offcn.bean.Employee">
    insert into employee (eid, ename, esex, 
      age, phonenumber, hire_date, 
      jobnumber, password, remark1, 
      remark2, remark3)
    values (#{eid,jdbcType=INTEGER}, #{ename,jdbcType=VARCHAR}, #{esex,jdbcType=INTEGER}, 
      #{age,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, #{hireDate,jdbcType=DATE}, 
      #{jobnumber,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{remark1,jdbcType=VARCHAR}, 
      #{remark2,jdbcType=VARCHAR}, #{remark3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.offcn.bean.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        eid,
      </if>
      <if test="ename != null">
        ename,
      </if>
      <if test="esex != null">
        esex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="phonenumber != null">
        phonenumber,
      </if>
      <if test="hireDate != null">
        hire_date,
      </if>
      <if test="jobnumber != null">
        jobnumber,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="remark1 != null">
        remark1,
      </if>
      <if test="remark2 != null">
        remark2,
      </if>
      <if test="remark3 != null">
        remark3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="ename != null">
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="esex != null">
        #{esex,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="hireDate != null">
        #{hireDate,jdbcType=DATE},
      </if>
      <if test="jobnumber != null">
        #{jobnumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="remark1 != null">
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null">
        #{remark3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.offcn.bean.EmployeeExample" resultType="java.lang.Long">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.eid != null">
        eid = #{record.eid,jdbcType=INTEGER},
      </if>
      <if test="record.ename != null">
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.esex != null">
        esex = #{record.esex,jdbcType=INTEGER},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenumber != null">
        phonenumber = #{record.phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.hireDate != null">
        hire_date = #{record.hireDate,jdbcType=DATE},
      </if>
      <if test="record.jobnumber != null">
        jobnumber = #{record.jobnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.remark1 != null">
        remark1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null">
        remark2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
      <if test="record.remark3 != null">
        remark3 = #{record.remark3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set eid = #{record.eid,jdbcType=INTEGER},
      ename = #{record.ename,jdbcType=VARCHAR},
      esex = #{record.esex,jdbcType=INTEGER},
      age = #{record.age,jdbcType=VARCHAR},
      phonenumber = #{record.phonenumber,jdbcType=VARCHAR},
      hire_date = #{record.hireDate,jdbcType=DATE},
      jobnumber = #{record.jobnumber,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      remark1 = #{record.remark1,jdbcType=VARCHAR},
      remark2 = #{record.remark2,jdbcType=VARCHAR},
      remark3 = #{record.remark3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.offcn.bean.Employee">
    update employee
    <set>
      <if test="ename != null">
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="esex != null">
        esex = #{esex,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phonenumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="hireDate != null">
        hire_date = #{hireDate,jdbcType=DATE},
      </if>
      <if test="jobnumber != null">
        jobnumber = #{jobnumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="remark1 != null">
        remark1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        remark2 = #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null">
        remark3 = #{remark3,jdbcType=VARCHAR},
      </if>
    </set>
    where eid = #{eid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.offcn.bean.Employee">
    update employee
    set ename = #{ename,jdbcType=VARCHAR},
      esex = #{esex,jdbcType=INTEGER},
      age = #{age,jdbcType=VARCHAR},
      phonenumber = #{phonenumber,jdbcType=VARCHAR},
      hire_date = #{hireDate,jdbcType=DATE},
      jobnumber = #{jobnumber,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      remark1 = #{remark1,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR},
      remark3 = #{remark3,jdbcType=VARCHAR}
    where eid = #{eid,jdbcType=INTEGER}
  </update>

  <select id="findEmployeesByCondition" resultMap="BaseResultMap">
    select * from employee
    <where>
      <if test="ename!=null">
        ename like concat('%',#{ename},'%')
      </if>
      <if test="jobnumber!=null">
        and jobnumber like concat('%',#{jobnumber},'%')
      </if>
    </where>
    limit #{limitStart},#{rows}
  </select>

  <select id="countEmployeesByCondition" resultType="_int">
    select count(eid) from employee
    <where>
      <if test="ename!=null">
        ename like concat('%',#{ename},'%')
      </if>
      <if test="jobnumber!=null">
        and jobnumber like concat('%',#{jobnumber},'%')
      </if>
    </where>
  </select>
</mapper>